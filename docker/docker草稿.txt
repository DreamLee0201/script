----------------------------------docker配置---------------------------------------------------
/etc/docker/daemon.json

{
    "registry-mirrors": ["https://registry.docker-cn.com","http://hub-mirror.c.163.com","https://docker.mirrors.ustc.edu.cn","https://pee6w651.mirror.aliyuncs.com"],
    "live-restore": true
}



----------------------------------docker使用---------------------------------------------------

docker run --name nginx -d -p 80:80 -v /home/zjbj/lixiang/nginx_conf/log:/var/log/nginx -v /home/zjbj/lixiang/nginx_conf/conf.d:/etc/nginx/conf.d -v /home/zjbj/lixiang/nginx_conf/conf/nginx.conf:/etc/nginx/nginx.conf -v /home/zjbj/repository:/opt/repository nginx

docker run --name nginx --rm -d -p 88:80 nginx

docker run -d --name nginx --restart=unless-stopped -p 88:80 -p 3316:3316 -p 6389:6389 -v /home/cscec/jenkins/docker/nginx/nginx.conf:/etc/nginx/nginx.conf nginx

docker run -d --name nginx --restart=unless-stopped -p 80:80 -p 8848:8848 -p 8090:8090 -v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf -v /root/docker/nginx/log:/var/log/nginx nginx 


docker run -d --name mysql -v mysql01_volume:/var/lib/mysql -p 3300:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql

docker run --name jenkins --detach --privileged --network jenkins --network-alias docker --env DOCKER_TLS_CERTDIR=/certs --volume jenkins-docker-certs:/certs/client --volume jenkins-data:/var/jenkins_home --publish 2376:2376 docker:dind --storage-driver overlay2

docker run -u root -d --name jenkins01 --restart=always -p 8082:8080 -p 50000:50000 -v jenkins-data:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock  -v /root/.m2/repository:/root/.m2/repository -v /opt/env:/opt/env jenkinsci/blueocean



docker run -d --name filebrowser -p 8081:80 -v /home/dreamlee/filebrowser/sites/root:/srv -v /home/dreamlee/filebrowser/config.json:/etc/config.json -v /home/dreamlee/filebrowser/database.db:/etc/database.db filebrowser/filebrowser

docker run -d --name mysql -v mysql_volume5.7:/var/lib/mysql -v /home/dreamlee/mysql_conf:/etc/mysql -p 3300:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:v1

docker run -d --name redis -p 6379:6379 redis

docker run -d --restart=always --name nexus -p 8080:8081 -v nexus-data:/var/nexus-data sonatype/nexus3

docker run -d --name bind --restart=always --publish 53:53/tcp --publish 53:53/udp --publish 10000:10000/tcp -v /srv/docker/bind:/data sameersbn/bind:9.16.1-20200524

---------------------------------------------------------------------------------------------------


docker run -d --name builder01 --restart=unless-stopped -v /root/.m2/repository:/root/.m2/repository -v /opt/env:/opt/env centos:7.9.2009

##gitlab
docker run -d \
-p 4430:443 -p 800:80 -p 220:22 \
--name gitlab \
--restart unless-stopped \
-v /opt/gitlab/config:/etc/gitlab \
-v /opt/gitlab/logs:/var/log/gitlab \
-v /opt/gitlab/data:/var/opt/gitlab \
-v /etc/localtime:/etc/localtime \
gitlab/gitlab-ce
sudo docker exec -it gitlab grep 'Password:' /etc/gitlab/initial_root_password





docker run -d --name cscec83_mysql02 --restart=unless-stopped -v cscec83_mysql02_volume:/var/lib/mysql -p 3302:3306 -e MYSQL_ROOT_PASSWORD=alpha@zhkj mysql:v1.1


docker run -d --restart=unless-stopped --name cscec83_redis01 -p 3321:6379 redis
docker run -d --restart=unless-stopped --name redis -p 6379:6379 redis:7.0

docker run -d --name cscec83_mysql2 --restart=unless-stopped -v cscec83_mysql2:/var/lib/mysql -p 3302:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:v1.1

####禅道
docker run --name zentao --restart=unless-stopped -p 81:80 -v /home/dreamlee/docker/zentao-data/zentaopms:/www/zentaopms -v /home/dreamlee/docker/zentao-data/mysqldata:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d easysoft/zentao

##普罗米修斯/prometheus
docker run -d --restart=unless-stopped --name prometheus -p 9090:9090 -v /home/dreamlee/docker/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus

docker run -d --restart=unless-stopped --name grafana -p 9091:3000 grafana/grafana

docker run -d --restart=unless-stopped --name node-exporter -p 9100:9100 prom/node-exporter

#Portainer是一个轻量级的管理界面，可让您轻松管理Docker主机或Swarm集群
docker volume create portainer_data
docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer

##cAdvisor是Google开发的容器监控工具
docker run \
  --volume=/:/rootfs:ro \
  --volume=/var/run:/var/run:rw \
  --volume=/sys:/sys:ro \
  --volume=/var/lib/docker/:/var/lib/docker:ro \
  --volume=/dev/disk/:/dev/disk:ro \
  --publish=8080:8080 \
  --detach=true \
  --name=cadvisor \
  --restart=unless-stopped \
  google/cadvisor:latest
  #通过访问地址：http://127.0.0.1:8080/containers/ 可以查看所有容器信息

##Rancher是一个开源的企业级容器管理平台
docker run -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher:v2.0.0




docker build -f Dockerfile --no-cache -t cscec83/mysql:5.7 .

docker run -d --restart=unless-stopped --name mysql_test0622 -v /home/cscec/jenkins/docker/mysql_test/data:/var/lib/mysql -p 3300:3306 -e MYSQL_ROOT_PASSWORD=ZjbjCloudTest@Qwe213 cscec83/mysql:5.7

docker run -d --restart=unless-stopped --name mysql_tong0811 -v /home/cscec/jenkins/docker/mysql_tong/data:/var/lib/mysql -v /home/cscec/jenkins/docker/mysql_tong/mysql.conf.d:/etc/mysql/mysql.conf.d -p 3400:3306 -e MYSQL_ROOT_PASSWORD=ZjbjCloudTong@0811 cscec83/mysql:5.7


docker run -d --restart=unless-stopped --name mysql -v /root/docker/mysql/data:/var/lib/mysql -v /root/docker/mysql/conf:/etc/mysql/mysql.conf.d -v /root/docker/mysql/log:/var/log/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=1234$ESZ dreamlee/mysql:5.7

/root/docker/mysql/data:/var/lib/mysql
/root/docker/mysql/conf:/etc/mysql/mysql.conf.d
/root/docker/mysql/log:/var/log/mysql

/docker/mysql_0622/data:/var/lib/mysql
/docker/mysql_0622/conf:/etc/mysql/mysql.conf.d
/docker/mysql_0622/log:/var/log/mysql


docker run -d --restart=unless-stopped --name prometheus -p 9090:9090 -v /root/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus

docker run -d --restart=unless-stopped -p 3000:3000 --name=grafana -v /root/docker/grafana/conf:/etc/grafana -v /root/docker/grafana/data:/var/lib/grafana -v /root/docker/grafana/log:/var/log/grafana grafana/grafana



docker run -d --name nacos --rm -e MODE=standalone -e SPRING_DATASOURCE_PLATFORM=mysql -e MYSQL_SERVICE_HOST=192.168.18.129 -e MYSQL_SERVICE_PORT=3306 -e MYSQL_SERVICE_USER=nacos -e MYSQL_SERVICE_PASSWORD=1234$ESZ -e MYSQL_SERVICE_DB_NAME=nacos -p 8848:8848 nacos/nacos-server:v2.1.0

docker run -d --rm --name nacos -e MODE=standalone -p 8848:8848 nacos/nacos-server:v2.1.0


docker run -d --rm \
-e PREFER_HOST_MODE=hostname \
-e MODE=cluster \
-e NACOS_SERVERS="192.168.18.129:8849,192.168.18.129:8850,192.168.18.129:8851" \
-e SPRING_DATASOURCE_PLATFORM=mysql \
-e MYSQL_SERVICE_HOST=192.168.18.129 \
-e MYSQL_SERVICE_PORT=3306 \
-e MYSQL_SERVICE_USER=nacos \
-e MYSQL_SERVICE_PASSWORD=1234$ESZ \
-e MYSQL_SERVICE_DB_NAME=nacos \
-e NACOS_SERVER_IP=192.168.18.129 \
-e JVM_XMS=512m \
-e JVM_XMX=1024m \
-e JVM_XMN=256m \
-e JVM_MS=32m \
-e JVM_MMS=80m \
-p 8849:8848 \
--name nacos1 \
nacos/nacos-server:1.4.1


docker run --restart=unless-stopped --name ztncui -dp 3443:3443 keynetworks/ztncui

docker build -f Dockerfile --no-cache -t cscec83/jeecg-boot:3.3.0 .
docker build -f Dockerfile --no-cache -t cscec83/ant-design-vue-jeecg:3.1.0 .

docker run -d --rm --name jeecg-boot-1 -p 8081:8080 cscec83/jeecg-boot:3.3.0
docker run -d --rm --name ant-design-vue-jeecg -p 88:80 cscec83/ant-design-vue-jeecg:3.1.0



docker build -f Dockerfile --no-cache -t cscec83/pm-jeecg-backend:1.0.0 .
docker build -f Dockerfile --no-cache -t cscec83/pm-jeecg-frontend:1.0.0 .

docker run -it --rm --name jeecg-boot -p 8081:8080 cscec83/pm-jeecg-backend:1.0.0


